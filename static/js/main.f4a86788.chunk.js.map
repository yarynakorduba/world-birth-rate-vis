{"version":3,"sources":["helpers/scales.js","Components/Legend/index.js","Components/Legend/Legend.js","Components/BeeswarmChart/Markers.js","Components/BeeswarmChart/index.js","Components/BeeswarmChart/BeeswarmChart.js","App.js","serviceWorker.js","index.js"],"names":["colorScale","scaleOrdinal","domain","range","Legend","react_default","a","createElement","className","vx_legend_es","scale","Markers","_ref","xScale","minBirthItem","maxBirthItem","yMax","Fragment","vx_marker_es","from","x","birth","y","to","stroke","strokeWidth","label","concat","country","labelStroke","labelDx","labelDy","Layout","compose","defaultProps","margin","top","right","bottom","left","withParentSize","withState","withProps","_ref4","Object","asyncToGenerator","regenerator_default","mark","_callee","_ref3","data","setData","_data","wrap","_context","prev","next","csv","_ref5","code","region","id","Number","sent","stop","this","_x","apply","arguments","branch","_ref6","renderComponent","_ref7","parentWidth","console","log","beeswarmData","map","objectSpread","scaleLinear","Math","ceil","max","d","scan","b","enhance","width","height","parentHeight","XYChart","ariaLabel","type","yScale","renderTooltip","_ref2","event","datum","BeeswarmChart_Markers","CirclePackSeries","fill","dataItem","size","CrossHair","showHorizontalLine","fullHeight","fullWidth","circleFill","circleSize","showCircle","circleStroke","XAxis","numTicks","Components_Legend","App","Components_BeeswarmChart","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f4a86788.chunk.js","sourcesContent":["import { scaleOrdinal } from \"d3\"\r\n\r\nexport const colorScale = scaleOrdinal()\r\n  .domain([\"Africa\", \"America\", \"Asia\", \"Oceania\", \"Europe\"])\r\n  .range([\"#f5e11b\", \"#000095\", \"#95278a\", \"#059594\", \"#95040f\"])\r\n","import Legend from \"./Legend\"\r\nexport default Legend\r\n","import React from \"react\"\r\nimport { LegendOrdinal } from \"@vx/vx\"\r\nimport { colorScale } from \"../../helpers/scales\"\r\n\r\nimport \"./Legend.scss\"\r\n\r\nconst Legend = () => (\r\n  <div className={\"Legend\"}>\r\n    <LegendOrdinal scale={colorScale} />\r\n  </div>\r\n)\r\nexport default Legend\r\n","import { Marker } from \"@vx/vx\"\r\nimport React from \"react\"\r\n\r\nconst Markers = ({ xScale, minBirthItem, maxBirthItem, yMax }) => (\r\n  <>\r\n    <Marker\r\n      from={{ x: xScale(minBirthItem.birth), y: 0 }}\r\n      to={{ x: xScale(minBirthItem.birth), y: yMax }}\r\n      stroke={\"black\"}\r\n      strokeWidth={1}\r\n      label={`${minBirthItem.country} ${minBirthItem.birth}`}\r\n      labelStroke={\"none\"}\r\n      labelDx={6}\r\n      labelDy={15}\r\n    />\r\n    <Marker\r\n      from={{ x: xScale(maxBirthItem.birth), y: 0 }}\r\n      to={{ x: xScale(maxBirthItem.birth), y: yMax }}\r\n      stroke={\"black\"}\r\n      strokeWidth={1}\r\n      label={`${maxBirthItem.country} ${maxBirthItem.birth}`}\r\n      labelStroke={\"none\"}\r\n      labelDx={6}\r\n      labelDy={15}\r\n    />\r\n  </>\r\n)\r\n\r\nexport default Markers\r\n","import Layout from \"./BeeswarmChart\"\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { withParentSize } from \"@vx/vx\"\r\nimport { csv, extent, scaleLinear, min, max, scan } from \"d3\"\r\nimport { CirclePackSeries, XYChart, XAxis, CrossHair } from \"@data-ui/xy-chart\"\r\nimport { compose, defaultProps, withProps, branch, renderComponent, withState } from \"recompose\"\r\nimport { colorScale } from \"../../helpers/scales\"\r\nimport \"./BeeswarmChart.scss\"\r\nimport Legend from \"../Legend\"\r\nimport Markers from \"./Markers\"\r\n\r\nconst BeeswarmChart = ({\r\n  data,\r\n  beeswarmData,\r\n  margin,\r\n  parentWidth: width,\r\n  parentHeight: height,\r\n  xScale,\r\n  maxBirthItem,\r\n  minBirthItem\r\n}) => (\r\n  <div className={\"BeeswarmChart\"}>\r\n    <h2 className=\"BeeswarmChart__header\">Birth rate per 1000 persons for 2013</h2>\r\n    {console.log(maxBirthItem, minBirthItem)}\r\n    <XYChart\r\n      ariaLabel=\"Beeswarm chart showind the birth rate for different countries for the year 2013\"\r\n      width={width}\r\n      height={height}\r\n      xScale={{ type: \"linear\", domain: [0, Math.ceil(max(data, d => d.birth))] }}\r\n      yScale={{ type: \"linear\" }}\r\n      margin={margin}\r\n      renderTooltip={({ event, data, datum }) => (\r\n        <div>\r\n          <div>{datum.country}</div>\r\n          <div>{datum.birth}</div>\r\n        </div>\r\n      )}\r\n    >\r\n      <Markers\r\n        xScale={xScale}\r\n        minBirthItem={minBirthItem}\r\n        maxBirthItem={maxBirthItem}\r\n        yMax={height - margin.top - margin.bottom}\r\n      />\r\n      <CirclePackSeries data={beeswarmData} fill={dataItem => colorScale(dataItem.region)} size={dataItem => 5} />\r\n      <CrossHair\r\n        data={beeswarmData}\r\n        showHorizontalLine={false}\r\n        fullHeight\r\n        fullWidth\r\n        stroke=\"#343a40\"\r\n        strokeWidth={1}\r\n        circleFill=\"transparent\"\r\n        circleSize={6}\r\n        showCircle={true}\r\n        circleStroke=\"black\"\r\n      />\r\n      <XAxis data={beeswarmData} label=\"Birth rate\" numTicks={20} />\r\n    </XYChart>\r\n    <Legend />\r\n  </div>\r\n)\r\n\r\nconst enhance = compose(\r\n  defaultProps({\r\n    margin: { top: 60, right: 120, bottom: 200, left: 120 }\r\n  }),\r\n  withParentSize,\r\n  withState(\"data\", \"setData\"),\r\n  withProps(async ({ data, setData }) => {\r\n    if (!data) {\r\n      const data = await csv(\"birth_rate.csv\", ({ country, birth, code, region, id }) => ({\r\n        country,\r\n        birth: Number(birth),\r\n        code,\r\n        region,\r\n        id\r\n      }))\r\n      setData(data)\r\n    }\r\n  }),\r\n  branch(({ data }) => !data, renderComponent(() => \"Generating chart...\")),\r\n  withProps(\r\n    ({ data, margin, parentWidth }) =>\r\n      console.log(parentWidth) || {\r\n        beeswarmData: data.map(country => ({ x: country.birth, ...country })),\r\n        xScale: scaleLinear()\r\n          .domain([0, Math.ceil(max(data, d => d.birth))])\r\n          .range([0, parentWidth - margin.left - margin.right]),\r\n        maxBirthItem: data[scan(data, (a, b) => b.birth - a.birth)],\r\n        minBirthItem: data[scan(data, (a, b) => a.birth - b.birth)]\r\n      }\r\n  )\r\n)\r\nexport default enhance(BeeswarmChart)\r\n","import React, { Component } from \"react\"\nimport Layout from \"./Components/BeeswarmChart\"\n\nimport \"./App.scss\"\n\nclass App extends Component {\n  render() {\n      return <div className=\"App\"><Layout className={\"App\"}/></div>\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}