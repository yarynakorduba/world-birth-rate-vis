{"version":3,"sources":["helpers/scales.js","Components/Legend/index.js","Components/Legend/Legend.js","Components/BeeswarmChart/Markers.js","Components/BeeswarmChart/index.js","Components/BeeswarmChart/BeeswarmChart.js","App.js","serviceWorker.js","index.js"],"names":["colorScale","scaleOrdinal","domain","range","Legend","react_default","a","createElement","className","vx_legend_es","scale","Markers","_ref","xScale","minItem","maxItem","yMax","currentInfo","Fragment","vx_marker_es","from","x","birth","death","y","to","stroke","strokeWidth","label","concat","country","labelStroke","strokeDasharray","labelDx","labelDy","Layout","compose","defaultProps","margin","top","right","bottom","left","withParentSize","withState","withProps","_ref4","Object","asyncToGenerator","regenerator_default","mark","_callee","_ref3","data","setData","_data","wrap","_context","prev","next","csv","_ref5","GDP","rest","objectWithoutProperties","objectSpread","Number","sent","stop","this","_x","apply","arguments","branch","_ref6","renderComponent","withStateHandlers","_ref7","parentWidth","beeswarmData","map","scan","b","buttonText","scaleLinear","Math","ceil","toggleHandler","_ref8","_ref9","xSizeScale","max","d","enhance","width","height","parentHeight","onClick","Components_Legend","XYChart","ariaLabel","type","yScale","renderTooltip","_ref2","event","datum","BeeswarmChart_Markers","CirclePackSeries","fill","dataItem","region","size","console","log","CrossHair","showHorizontalLine","fullHeight","fullWidth","circleFill","circleSize","showCircle","circleStroke","XAxis","numTicks","App","Components_BeeswarmChart","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.2a879ef5.chunk.js","sourcesContent":["import { scaleOrdinal } from \"d3\"\r\n\r\nexport const colorScale = scaleOrdinal()\r\n  .domain([\"Africa\", \"America\", \"Asia\", \"Oceania\", \"Europe\"])\r\n  .range([\"#f5e11b\", \"#000095\", \"#95278a\", \"#059594\", \"#95040f\"])\r\n","import Legend from \"./Legend\"\r\nexport default Legend\r\n","import React from \"react\"\r\nimport { LegendOrdinal } from \"@vx/vx\"\r\nimport { colorScale } from \"../../helpers/scales\"\r\n\r\nimport \"./Legend.scss\"\r\n\r\nconst Legend = () => (\r\n  <div className={\"Legend\"}>\r\n    <LegendOrdinal scale={colorScale} />\r\n    <i>bubble size corresponds to the GDP rate per capita</i>\r\n  </div>\r\n)\r\nexport default Legend\r\n","import { Marker } from \"@vx/vx\"\r\nimport React from \"react\"\r\n\r\nconst Markers = ({ xScale, minItem, maxItem, yMax, currentInfo }) => (\r\n  <>\r\n    <Marker\r\n      from={{ x: xScale(currentInfo === \"show death rate\" ? minItem.birth : minItem.death), y: 0 }}\r\n      to={{ x: xScale(currentInfo === \"show death rate\" ? minItem.birth : minItem.death), y: yMax }}\r\n      stroke={\"black\"}\r\n      strokeWidth={1}\r\n      label={`${minItem.country} ${currentInfo === \"show death rate\" ? minItem.birth : minItem.death}`}\r\n      labelStroke={\"none\"}\r\n      strokeDasharray=\"2 2 2\"\r\n      labelDx={6}\r\n      labelDy={15}\r\n    />\r\n    <Marker\r\n      from={{ x: xScale(currentInfo === \"show death rate\" ? maxItem.birth : maxItem.death), y: 0 }}\r\n      to={{ x: xScale(currentInfo === \"show death rate\" ? maxItem.birth : maxItem.death), y: yMax }}\r\n      stroke={\"black\"}\r\n      strokeWidth={1}\r\n      strokeDasharray=\"2 2 2\"\r\n      label={`${maxItem.country} ${currentInfo === \"show death rate\" ? maxItem.birth : maxItem.death}`}\r\n      labelStroke={\"none\"}\r\n      labelDx={6}\r\n      labelDy={15}\r\n    />\r\n  </>\r\n)\r\n\r\nexport default Markers\r\n","import Layout from \"./BeeswarmChart\"\r\nexport default Layout\r\n","import React from \"react\"\r\nimport { withParentSize } from \"@vx/vx\"\r\nimport { csv, scaleLinear, scan, max } from \"d3\"\r\nimport { CirclePackSeries, XYChart, XAxis, CrossHair } from \"@data-ui/xy-chart\"\r\nimport { compose, defaultProps, withProps, branch, renderComponent, withState, withStateHandlers } from \"recompose\"\r\nimport { colorScale } from \"../../helpers/scales\"\r\nimport \"./BeeswarmChart.scss\"\r\nimport Legend from \"../Legend\"\r\nimport Markers from \"./Markers\"\r\n\r\nconst BeeswarmChart = ({\r\n  data,\r\n  beeswarmData,\r\n  margin,\r\n  parentWidth: width,\r\n  parentHeight: height,\r\n  xScale,\r\n  xSizeScale,\r\n  maxItem,\r\n  minItem,\r\n  toggleHandler,\r\n  buttonText\r\n}) => (\r\n  <div className={\"BeeswarmChart\"}>\r\n    <h2 className=\"BeeswarmChart__header\">\r\n      {buttonText === \"show death rate\" ? \"Birth\" : \"Death\"} rate per 1000 persons for 2017\r\n      <button className={\"BeeswarmChart__button\"} onClick={toggleHandler}>\r\n        {buttonText}\r\n      </button>\r\n    </h2>\r\n    <Legend />\r\n\r\n    <XYChart\r\n      ariaLabel=\"Beeswarm chart showing the birth rate for different countries for the year 2013\"\r\n      width={width}\r\n      height={height}\r\n      margin={margin}\r\n      xScale={{\r\n        type: \"linear\",\r\n        domain: [0, Math.ceil(buttonText === \"show death rate\" ? maxItem.birth : maxItem.death)]\r\n      }}\r\n      yScale={{\r\n        type: \"linear\",\r\n        range: [height - margin.top - margin.bottom, 0]\r\n      }}\r\n      renderTooltip={({ event, data, datum }) => (\r\n        <div>\r\n          <div>{datum.country}</div>\r\n          <div>{buttonText === \"show birth rate\" ? \"Death rate: \" + datum.death : \"Birth rate: \" + datum.birth}</div>\r\n          <div>GDP per capita: {datum.GDP}</div>\r\n        </div>\r\n      )}\r\n    >\r\n      <Markers\r\n        currentInfo={buttonText}\r\n        xScale={xScale}\r\n        minItem={minItem}\r\n        maxItem={maxItem}\r\n        yMax={height - margin.bottom - margin.top}\r\n      />\r\n      <CirclePackSeries\r\n        data={beeswarmData}\r\n        fill={dataItem => colorScale(dataItem.region)}\r\n        size={dataItem => console.log(dataItem.GDP) || xSizeScale(dataItem.GDP)}\r\n      />\r\n      <CrossHair\r\n        data={beeswarmData}\r\n        showHorizontalLine={false}\r\n        fullHeight\r\n        fullWidth\r\n        stroke=\"#343a40\"\r\n        strokeWidth={1}\r\n        circleFill=\"transparent\"\r\n        circleSize={6}\r\n        showCircle={true}\r\n        circleStroke=\"black\"\r\n      />\r\n      <XAxis data={beeswarmData} label=\"Birth rate\" numTicks={20} />\r\n    </XYChart>\r\n  </div>\r\n)\r\n\r\nconst enhance = compose(\r\n  defaultProps({\r\n    margin: { top: 20, right: 120, bottom: 150, left: 120 }\r\n  }),\r\n  withParentSize,\r\n  withState(\"data\", \"setData\"),\r\n  withProps(async ({ data, setData }) => {\r\n    if (!data) {\r\n      const data = await csv(\"birth_rate_data.csv\", ({ birth, death, GDP, ...rest }) => ({\r\n        birth: Number(birth),\r\n        death: Number(death),\r\n        GDP: Number(GDP),\r\n        ...rest\r\n      }))\r\n      setData(data)\r\n    }\r\n  }),\r\n  branch(({ data }) => !data, renderComponent(() => \"Generating chart...\")),\r\n\r\n  withStateHandlers(\r\n    ({ data, margin, parentWidth }) => ({\r\n      margin,\r\n      parentWidth,\r\n      beeswarmData: data.map(country => ({ ...country, x: country.birth, y: 0 })),\r\n      data,\r\n      maxItem: data[scan(data, (a, b) => b.birth - a.birth)],\r\n      minItem: data[scan(data, (a, b) => a.birth - b.birth)],\r\n      buttonText: \"show death rate\",\r\n      xScale: scaleLinear()\r\n        .domain([0, Math.ceil(data[scan(data, (a, b) => b.birth - a.birth)].birth)])\r\n        .range([0, parentWidth - 2 * margin.left])\r\n    }),\r\n    {\r\n      toggleHandler: ({ data, beeswarmData, buttonText, parentWidth, margin }) => () => {\r\n        return {\r\n          beeswarmData: data.map(country => ({\r\n            ...country,\r\n            x: buttonText === \"show death rate\" ? country.death : country.birth\r\n          })),\r\n          buttonText: buttonText === \"show death rate\" ? \"show birth rate\" : \"show death rate\",\r\n          maxItem:\r\n            data[scan(data, (a, b) => (buttonText === \"show death rate\" ? b.death - a.death : b.birth - a.birth))],\r\n          minItem:\r\n            data[scan(data, (a, b) => (buttonText === \"show death rate\" ? a.death - b.death : a.birth - b.birth))],\r\n          xScale: scaleLinear()\r\n            .domain([\r\n              0,\r\n              Math.ceil(\r\n                buttonText === \"show death rate\"\r\n                  ? data[scan(data, (a, b) => b.death - a.death)].death\r\n                  : data[scan(data, (a, b) => b.birth - a.birth)].birth\r\n              )\r\n            ])\r\n            .range([0, parentWidth - margin.right - margin.left])\r\n        }\r\n      }\r\n    }\r\n  ),\r\n  withProps(({ data }) => ({\r\n    xSizeScale: scaleLinear()\r\n      .domain([0, max(data, d => d.GDP)])\r\n      .range([3, 16])\r\n  }))\r\n)\r\nexport default enhance(BeeswarmChart)\r\n","import React, { Component } from \"react\"\nimport Layout from \"./Components/BeeswarmChart\"\n\nimport \"./App.scss\"\n\nclass App extends Component {\n  render() {\n      return <div className=\"App\"><Layout className={\"App\"}/></div>\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./App\"\r\nimport * as serviceWorker from \"./serviceWorker\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}